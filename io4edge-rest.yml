openapi: "3.0.2"
info:
  title: Io4edge API
  version: "1.0"
  description: |-
    This is the API documentation for io4edge devices using HTTPS.

    The API is secured with basic auth with a single user name and password.
    - user: "io4edge", default password: "core"

    The password can be changed with the PATCH /users/io4edge/basic_auth endpoint.

    The API is available at https://my-io4edge-device/api/v1
servers:
  - url: https://my-io4edge-device/api/v1
    description: Example Io4Edge Device
tags:
  - name: core
    description: Common io4edge API

paths:
  /users/{user}/basic_auth:
    put:
      parameters:
        - name: user
          in: path
          description: |-
            User Name to update.
            Currently only "io4edge" user is supported.
          required: true
          schema:
            type: string
      tags:
        - core
      summary: Update basic auth password
      description: |-
        Update basic auth password for user.
        Authentication with the current credentials is required.
        Password must be at least 8 characters long.
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "AZ78z67c!99"
      responses:
        "200":
          description: OK
        "400":
          description: Invalid password
        "401":
          description: Unauthorized
        "404":
          description: User not found
  /certificate:
    put:
      tags:
        - core
      summary: Load certificate
      description: |-
        Upload the HTTPS server certificate to device. 
        After the update, the server will restart with the updated certificate.
      security:
        - basicAuth: []
      requestBody:
        content:
          application/x-pem-file:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
  /firmware:
    get:
      tags:
        - core
      summary: Get firmware version
      description: |-
        Get firmware version of the device.
      security:
        - basicAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirmwareVersion"
        "401":
          description: Unauthorized
    put:
      tags:
        - core
      summary: Load firmware
      description: |-
        Upload firmware to the device.
      security:
        - basicAuth: []
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: OK
        "400":
          description: Error during firmware update
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Flash programming error"
        "401":
          description: Unauthorized
  /hardware:
    get:
      tags:
        - core
      summary: Get hardware information
      description: |-
        Get hardware information of the device.
      security:
        - basicAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HardwareInventory"
        "401":
          description: Unauthorized
    put:
      tags:
        - core
      summary: Load hardware information
      description: |-
        Upload hardware information to device. If hardware information is already set, the request will be rejected.
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HardwareInventory"
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "423":
          description: Locked. Hardware information can be updated only once.
  /command/restart:
    post:
      tags:
        - core
      summary: Restart device
      description: |-
        Restart device.
      security:
        - basicAuth: []
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
  /command/repl:
    post:
      tags:
        - core
      summary: Execute a registered REPL command
      description: |-
        Execute a registered REPL command.
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                command:
                  description: Command name with parameters
                  type: string
                  example: "heap"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    description: Command result
                    type: string
                    example: "Free heap: 125466 bytes"
        "400":
          description: Invalid command or command failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Command not found"
        "401":
          description: Unauthorized
  /parameter/{parameter}:
    get:
      tags:
        - core
      summary: Get parameter value
      description: |-
        Get parameter value.
        Parameter name must be a valid parameter name known to the firmware.
      security:
        - basicAuth: []
      parameters:
        - name: parameter
          in: path
          description: |-
            Parameter name.
          required: true
          schema:
            type: string
            example: "device-id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    description: Parameter value
                    type: string
                    example: "my-device"
        "401":
          description: Unauthorized
        "404":
          description: Parameter not found
        "403":
          description: Forbidden. Parameter is read-protected.
    put:
      tags:
        - core
      summary: Set parameter value
      description: |-
        Set parameter value.
        Parameter name must be a valid parameter name known to the firmware.
        If the parameter is already set by the configuration, the request will be rejected.
      security:
        - basicAuth: []
      parameters:
        - name: parameter
          in: path
          description: |-
            Parameter name.
          required: true
          schema:
            type: string
            example: "device-id"
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Parameter not found
        "423":
          description: Parameter is part of configuration and cannot be changed by this endpoint
  /configuration:
    get:
      tags:
        - core
      summary: Get configuration version
      description: |-
        Get configuration version of the device and list the parameters that are not supported 
        by the firmware or missing in configuration.
      security:
        - basicAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    example: "1.0"
                  unsupported_parameters:
                    description: List of parameters in configuration that are not supported by the firmware.
                    type: array
                    items:
                      type: string
                    example: ["parameter1", "parameter2"]
                  missing_parameters:
                    description: List of parameters that are expected by firmware but missing in configuration.
                    type: array
                    items:
                      type: string
                    example: ["parameter3"]
        "401":
          description: Unauthorized
    patch:
      tags:
        - core
      summary: Load configuration
      description: |-
        Upload configuration to device. After the update, the device will restart.
        Client should call configuration GET endpoint to check if the configuration was applied successfully.
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Configuration"
      responses:
        "200":
          description: OK
        "400":
          description: Invalid configuration
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "version parameter missing"
        "401":
          description: Unauthorized
  /metrics:
    get:
      tags:
        - core
      summary: Get metrics
      description: |-
        Get metrics in prometheus text format. 
        Metrics are application specific.
      security:
        - basicAuth: []
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/PromMetrics"
        "401":
          description: Unauthorized

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    FirmwareVersion:
      type: object
      properties:
        version:
          type: string
          example: "1.0.0-rc1"
    HardwareInventory:
      type: object
      properties:
        part_number:
          type: string
          example: "S103-SIO04"
        serial_number:
          type: string
          example: "24891aa4-d098-4e7e-9a40-d07de788a928"
        major_version:
          type: integer
          example: 1
    Configuration:
      type: object
      properties:
        version:
          type: string
          example: "1.0"
        parameters:
          type: object
          properties:
            parameter1:
              type: string
              example: "value1"
            parameter2:
              type: string
              example: "value2"
    PromMetrics:
      type: string
      example: |
        # HELP gnss_fix_type_enum GNSS fix type (0-7)
        # TYPE gnss_fix_type_enum gauge
        gnss_fix_type_enum{} 1
        # HELP gnss_eph_meters GNSS estimated horizontal position error (m)
        # TYPE gnss_eph_meters gauge
        gnss_eph_meters{} 3.800000
        # HELP gnss_lat_degrees GNSS latidude (deg)
        # TYPE gnss_lat_degrees gauge
        gnss_lat_degrees{} 49.430775
        # HELP gnss_lon_degrees GNSS longitude (deg)
        # TYPE gnss_lon_degrees gauge
        gnss_lon_degrees{} 11.071074
